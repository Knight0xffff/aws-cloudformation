AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy StarRocks-BE on Amazon Web Services'
Metadata:
  LICENSE: Apache License Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network configuration
      Parameters:
      - PrivateSubnetID
    - Label:
        default: EC2 configuration
      Parameters:
      - KeyPairName
    - Label:
        default: AMI's id
      Parameters:
      - AmiId
    - Label:
        default: Node type configuration
      Parameters:
      - BeNodeInstanceType
    - Label:
        default: BE configuration
      Parameters:
      - SysLogDir
      - SysLogLevel
      - BePort
      - BeRpcPort
      - WebserverPort
      - HeartbeatServicePort
      - BrpcPort
    ParameterLabels:
      PrivateSubnetID:
        default: Private subnet ID
      KeyPairName:
        default: Key pair name
      AmiId:
        default: AMI with StarRocks
      BeNodeInstanceType:
        default: Be instance type
      SysLogDir:
        default: Dir to save be sys log
      SysLogLevel:
        default: Sys Log Level
      BePort:
        default: Be port
      BeRpcPort:
        default: Be Rpc port
      WebserverPort:
        default: Webserver port
      HeartbeatServicePort:
        default: Heartbeat service port
      BrpcPort:
        default: Brpc port
Parameters: 
  PrivateSubnetID: 
    Description: The Private Subnet ID that you want to deploy Fe nodes.
    Type: String
  KeyPairName: 
    Type: AWS::EC2::KeyPair::KeyName
    Description: Public/private key pairs allow you to securely connect to your instance after it launches.
  AmiId:
    Description: Reference the latest Amazon Linux AMI in a CloudFormation template.
    Type: String
  BeNodeInstanceType: 
    Description: Amazon EC2 instance type for the be nodes.
    Type: String
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
  SysLogDir:
    Description: Dir to save be log, please to fill in the absolute path
    Type: String
  SysLogLevel:
    Description: Sys Log Level, please select from the drop-down menu
    Type: String
    AllowedValues: 
      - INFO
      - WARN
      - ERROR
      - FATAL
  BePort:
    Description: Be port
    Type: String
  BeRpcPort:
    Description: Be Rpc port
    Type: String
  WebserverPort:
    Description: Webserver port
    Type: String
  HeartbeatServicePort:
    Description: Heartbeat service port
    Type: String
  BrpcPort:
    Description: Brpc port
    Type: String
Resources:
  BeInstance1:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install be instance replica 3
      AWS::CloudFormation::Init:
        install_server:
          files:
            "/var/www/html/index.html":
              content: |
                Hello world!
              mode: 000644
              owner: centos
              group: centos
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AmiId
      InstanceType: !Ref BeNodeInstanceType
      SubnetId: !Ref PrivateSubnetID
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v --stack '${AWS::StackName}' --resource BeInstance1 --region ${AWS::Region}
          cd /home/ec2-user/starrocks/StarRocks-2.0.1/be
          mkdir -p storage
          bin/start_be.sh --daemon
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource BeInstance1 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT10M"
  BeInstance2:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install be instance replica 2
      AWS::CloudFormation::Init:
        install_server:
          files:
            "/var/www/html/index.html":
              content: |
                Hello world!
              mode: 000644
              owner: centos
              group: centos
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AmiId
      InstanceType: !Ref BeNodeInstanceType
      SubnetId: !Ref PrivateSubnetID
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v --stack '${AWS::StackName}' --resource BeInstance2 --region ${AWS::Region}
          cd /home/ec2-user/starrocks/StarRocks-2.0.1/be
          mkdir -p storage
          bin/start_be.sh --daemon
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource BeInstance2 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT10M"
  BeInstance3:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install be instance replica 3
      AWS::CloudFormation::Init:
        install_server:
          files:
            "/var/www/html/index.html":
              content: |
                Hello world!
              mode: 000644
              owner: centos
              group: centos
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AmiId
      InstanceType: !Ref BeNodeInstanceType
      SubnetId: !Ref PrivateSubnetID
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v --stack '${AWS::StackName}' --resource BeInstance3 --region ${AWS::Region}
          cd /home/ec2-user/starrocks/StarRocks-2.0.1/be
          mkdir -p storage
          bin/start_be.sh --daemon
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource BeInstance3 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT10M"
Outputs:
  BeInstance1:
    Description: be instance 1
    Value: !Ref BeInstance1
  BeInstancePrivateIp1:
    Value: !GetAtt BeInstance1.PrivateIp
  BeInstance2:
    Description: be instance 2
    Value: !Ref BeInstance2
  BeInstancePrivateIp2:
    Value: !GetAtt BeInstance2.PrivateIp
  BeInstance3:
    Description: be instance 3
    Value: !Ref BeInstance3
  BeInstancePrivateIp3:
    Value: !GetAtt BeInstance3.PrivateIp